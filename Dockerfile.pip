
# docker build -t scalapy-tensorflow:base -f Dockerfile.base .
# docker build -t scalapy-tensorflow:pip -f Dockerfile.pip .

FROM scalapy-tensorflow:base

RUN set -x \
  && apt-get update \
  && apt-get install -y python3-pip \
  && rm -rf /var/lib/apt/lists/*

# https://stackoverflow.com/questions/52904639/dockerfile-with-pip-grpcio-is-very-slow-to-build => fix not applied yet
RUN pip3 install -U pip
RUN pip3 install numpy tensorflow==2.2.0

WORKDIR /scalapy-tensorflow
COPY . .
RUN find .
RUN echo '-batch' > .sbtopts
RUN sbt compile test

# We're keeping the number of epochs and training data size deliberately low -
# the Dockerized runs of the examples serve rather as smoke tests to spot linking/Python invocation errors.
ENV EPOCH_COUNT=40
RUN sbt 'project scalaPyTensorFlowCrossNative' 'run GradientDescentOptimizerExample'
RUN sbt 'project scalaPyTensorFlowCrossJVM'    'run GradientDescentOptimizerExample'
RUN sbt 'project dottyTensorflow'              'run GradientDescentOptimizerExample'

ENV EPOCH_COUNT=1 TRAINING_SET_SIZE=1000
RUN sbt 'project scalaPyTensorFlowCrossNative' 'run MnistExample'
RUN sbt 'project scalaPyTensorFlowCrossJVM'    'run MnistExample'
